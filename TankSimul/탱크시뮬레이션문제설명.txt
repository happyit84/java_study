[과제 5 - 탱크 시뮬레이션]

1000 * 1000의 평면 안에 100대의 탱크가 존재한다.

각 탱크는 평면상에서 자신의 위치 (x, y)를 갖는다.

각각의 탱크는 다음과 같은 능력치를 갖는다.
=> HP, 공격력, 정확도

각각의 탱크의 HP, 공격력, 정확도의 합은 100이다
각 능력치는 0보다 크고 99보다 작은 정수이다.

각각의 탱크는 자기 자신을 포함하여 모든 탱크들의 위치와 능력치를 알고 있다.

턴제로 운영이되는 이 게임은
매턴 각각의 탱크들이 동시에 다른 탱크를 공격하게 된다.

프로그램을 시작되고 초기에 200대의 탱크의 능력치를 랜덤으로 초기화 한다.
한번 초기화된 능력치는 프로그램이 종료될 때까지 변경되지 않는다.

1000번의 게임을 시뮬레이션하게 되는 데 각 게임의 결과를 합산하여 순위를 매겨 마지막에 출력한다.
각 게임마다  최후 생존자 순서로 1등은 10점, 2등은 5점, 3등은 2점을 부여한다.

매 게임마다 위치는 랜덤으로 다시 배치되고, HP는 채워진다.

매턴마다 각각의 탱크는 가장 가까이에 있는 탱크를 조준하여 공격한다.
공격시 빗나가는 경우도 있는데 빗나갔냐의 여부는 다음과 같이 계산한다.
(100 - 정확도)*(거리)*(0.7) / sqrt(1000^2+1000^2) > Math.random() => 참이면 빗나감

빗나가지 않았을 경우 공격을 받은 탱크에서 감소되는 HP는 다음과 같이 계산 된다.
공격받은 탱크 감소되는 HP =
	0.2*(공격탱크 공격력)*(정확도*Math.random()/100)*
	(1 - (거리)/(2*sqrt(1000^2+1000^2)))

<제약 사항>
탱크를 저장하기 위해 배열을 쓰지 말고 ArrayList를 사용하자
각 탱크간의 거리를 필요할 때 마다 계산하지 말고 HashMap에 저장하여 필요할 때 읽을 수 있도록 하자

